(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[95],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return d},kt:function(){return g}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),l=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=l(e.components);return o.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=l(n),g=r,f=u["".concat(p,".").concat(g)]||u[g]||s[g]||a;return n?o.createElement(f,i(i({ref:t},d),{},{components:n})):o.createElement(f,i({ref:t},d))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=u;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8733:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},metadata:function(){return p},toc:function(){return l},default:function(){return s}});var o=n(2122),r=n(9756),a=(n(7294),n(3905)),i=["components"],c={},p={unversionedId:"getting_started/deploy",id:"getting_started/deploy",isDocsHomePage:!1,title:"Deploy",description:"Deploy Own Testnet",source:"@site/docs/getting_started/deploy.md",sourceDirName:"getting_started",slug:"/getting_started/deploy",permalink:"/docs/getting_started/deploy",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Install",permalink:"/docs/getting_started/install"},next:{title:"General Concepts",permalink:"/docs/concept/general"}},l=[{value:"Deploy Own Testnet",id:"deploy-own-testnet",children:[]},{value:"Deploy Own Testnet(with Docker)",id:"deploy-own-testnetwith-docker",children:[]}],d={toc:l};function s(e){var t=e.components,n=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"deploy-own-testnet"},"Deploy Own Testnet"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"# Prerequisites -- go\nwget https://dl.google.com/go/go1.13.3.linux-amd64.tar.gz\nsudo tar -xvf go1.13.3.linux-amd64.tar.gz\nsudo mv go /usr/local\nexport GOROOT=/usr/local/go\nexport PATH=$GOPATH/bin:$GOROOT/bin:$PATH\n\n# prerequisites -- cmake\nsudo apt install cmake\n\n# set local own node\natopnode init [node_name]\n\natopcli keys add [validator_name]\n\natopnode add-genesis-account $(atopcli keys show [validator_name] -a) 1000000000uatop\n\natopcli config output json\natopcli config indent true\natopcli config trust-node true\n\natopnode gentx --name [validator_name]\natopnode collect-gentxs\natopnode validate-genesis\n\ncd $HOME/.atopnode/config\nvi genesis.json\n# find all denomination word 'stake' and change it 'uatop'\n\natopnode unsafe-reset-all\natopnode start\n\n# start rest-server\natopcli rest-server\n")),(0,a.kt)("h2",{id:"deploy-own-testnetwith-docker"},"Deploy Own Testnet(with Docker)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"# build\ndocker build --rm -t atopcloud/acetop:$TAG .\n\n# run /bin/sh\ndocker run -it -v ~/.atopnode:/atop/.atopnode -v ~/.atopcli:/atop/.atopcli --name atopconf atopcloud/acetop:$TAG /bin/sh\n\n# set local own node\natopnode init [node_name]\n\natopcli keys add [validator_name]\n\natopnode add-genesis-account $(atopcli keys show [validator_name] -a) 1000000000uatop\n\natopcli config output json\natopcli config indent true\natopcli config trust-node true\natopcli config chain-id acetophub\n\natopnode gentx --name [validator_name]\natopnode collect-gentxs\natopnode validate-genesis\n\n# find all denomination word 'stake' and change it 'uatop'\ncd $HOME/.atopnode/config\nvi genesis.json\n\n# find [rpc] laddr 'tcp://127.0.0.1:26657' and change it 'tcp://0.0.0.0:26657'\nvi config.toml\n\natopnode unsafe-reset-all\n\n\n# start node\ndocker run -it -p 26657:26657 -p 26656:26656 -v ~/.atopnode:/atop/.atopnode -v ~/.atopcli:/atop/.atopcli --name atopnode atopcloud/acetop:$TAG atopnode start\n\n# start rest-server\ndocker run -it -p 1317:1317 -v ~/.atopnode:/atop/.atopnode -v ~/.atopcli:/atop/.atopcli --name atoprest atopcloud/acetop:$TAG atopcli rest-server --laddr tcp://0.0.0.0:1317 --node http://host.docker.internal:26657 or http://{node container IP}:26657\n")),(0,a.kt)("h1",{id:""}))}s.isMDXComponent=!0}}]);